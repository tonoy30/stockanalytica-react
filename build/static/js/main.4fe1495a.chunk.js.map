{"version":3,"sources":["components/core/header/Header.tsx","components/core/footer/Footer.tsx","components/core/footer/FooterContainer.tsx","components/core/layout/Layout.tsx","components/home/Home.tsx","actions/default.action.ts","actions/types.ts","components/test/Test.tsx","App.tsx","serviceWorker.ts","reducers/default.reducer.ts","reducers/index.ts","store.ts","themes/breakpoints.ts","index.tsx"],"names":["MenuItem","props","Text","mt","base","md","mr","display","children","Header","useState","show","setShow","Flex","as","align","justify","wrap","padding","bg","color","background","Heading","size","letterSpacing","Box","onClick","fill","width","viewBox","xmlns","d","sm","alignItems","flexGrow","Footer","className","rest","Wrapper","Row","Column","Link","Title","FooterContainer","href","Layout","Home","dispatch","useDispatch","type","payload","Test","console","log","match","App","exact","path","component","Boolean","window","location","hostname","initialState","default","combineReducers","state","action","middleware","thunk","logger","breakpoints","lg","xl","newTheme","theme","ReactDOM","render","StrictMode","store","createStore","reducers","composeWithDevTools","applyMiddleware","ThemeProvider","CSSReset","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4fe1495a.chunk.js","sourcesContent":["import { Box, Flex, Heading, Text } from \"@chakra-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Header.scss\";\r\n//TODO: will be in the separate file\r\nconst list = [\r\n  {\r\n    title: \"Home\",\r\n    url: \"/home\",\r\n  },\r\n  {\r\n    title: \"Services\",\r\n    url: \"/services\",\r\n  },\r\n  {\r\n    title: \"About\",\r\n    url: \"/about\",\r\n  },\r\n  {\r\n    title: \"Contact Us\",\r\n    url: \"/contact_us\",\r\n  },\r\n];\r\nconst MenuItem = (props: any) => (\r\n  <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\r\n    {props.children}\r\n  </Text>\r\n);\r\nconst Header = (props: any) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      padding=\"1.5rem\"\r\n      bg=\"teal.500\"\r\n      color=\"white\"\r\n      background=\"radial-gradient(circle, #5c27fb 0%, #7047f7 100%)\"\r\n      {...props}\r\n    >\r\n      <Flex align=\"center\" mr={10}>\r\n        <Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"}>\r\n          Stock Analytica\r\n        </Heading>\r\n      </Flex>\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\r\n        <svg\r\n          fill=\"white\"\r\n          width=\"12px\"\r\n          viewBox=\"0 0 20 20\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <title>Menu</title>\r\n          <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\r\n        </svg>\r\n      </Box>\r\n      <Box\r\n        display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ sm: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n        flexGrow={1}\r\n      >\r\n        <MenuItem>Docs</MenuItem>\r\n        <MenuItem>Examples</MenuItem>\r\n        <MenuItem>Blog</MenuItem>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport \"./Footer.scss\"\r\ninterface IProps {\r\n\tchildren: any;\r\n\t[rest: string]: any\r\n}\r\n\r\nexport const Footer = (props: IProps) => {\r\n\treturn (\r\n\t\t<footer className=\"container\" {...props.rest}>\r\n\t\t\t{props.children}\r\n\t\t</footer>\r\n\t)\r\n}\r\nFooter.Wrapper = (props: IProps) => {\r\n\treturn (\r\n\t\t<div className=\"wrapper\" {...props.rest}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\nFooter.Row = (props: IProps) => {\r\n\treturn (\r\n\t\t<div className=\"row\" {...props.rest}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\nFooter.Column = (props: IProps) => {\r\n\treturn (\r\n\t\t<div className=\"column\" {...props.rest}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\nFooter.Link = (props: IProps) => {\r\n\treturn (\r\n\t\t<a className=\"link\" {...props.rest}>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t)\r\n}\r\nFooter.Title = (props: IProps) => {\r\n\treturn (\r\n\t\t<p className=\"title\" {...props.rest}>\r\n\t\t\t{props.children}\r\n\t\t</p>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Footer } from './Footer'\r\nimport { FaFacebook, FaInstagram, FaYoutube, FaTwitter } from \"react-icons/fa\"\r\n\r\nconst FooterContainer = () => {\r\n\treturn (\r\n\t\t<Footer>\r\n\t\t\t<Footer.Wrapper>\r\n\t\t\t\t<Footer.Row>\r\n\t\t\t\t\t<Footer.Column>\r\n\t\t\t\t\t\t<Footer.Title>About Us</Footer.Title>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Story</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Clients</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Testimonials</Footer.Link>\r\n\t\t\t\t\t</Footer.Column>\r\n\t\t\t\t\t<Footer.Column>\r\n\t\t\t\t\t\t<Footer.Title>Services</Footer.Title>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Marketing</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Consulting</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Development</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Design</Footer.Link>\r\n\t\t\t\t\t</Footer.Column>\r\n\t\t\t\t\t<Footer.Column>\r\n\t\t\t\t\t\t<Footer.Title>Contact Us</Footer.Title>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">United States</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">United Kingdom</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Australia</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">Support</Footer.Link>\r\n\t\t\t\t\t</Footer.Column>\r\n\t\t\t\t\t<Footer.Column>\r\n\t\t\t\t\t\t<Footer.Title>Social</Footer.Title>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">\r\n\t\t\t\t\t\t\t<FaFacebook />\r\n\t\t\t\t\t\t\t\tFacebook\r\n\t\t\t\t\t\t\t</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">\r\n\t\t\t\t\t\t\t<FaInstagram />\r\n\t\t\t\t\t\t\t\tInstagram\r\n\t\t\t\t\t\t\t</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">\r\n\t\t\t\t\t\t\t<FaYoutube />\r\n\t\t\t\t\t\t\t\tYoutube\r\n\t\t\t\t\t\t\t</Footer.Link>\r\n\t\t\t\t\t\t<Footer.Link href=\"#\">\r\n\t\t\t\t\t\t\t<FaTwitter />\r\n\t\t\t\t\t\t\t\tTwitter\r\n\t\t\t\t\t\t\t</Footer.Link>\r\n\t\t\t\t\t</Footer.Column>\r\n\t\t\t\t</Footer.Row>\r\n\t\t\t</Footer.Wrapper>\r\n\t\t</Footer>\r\n\t)\r\n}\r\n\r\nexport default FooterContainer\r\n","import React, { Fragment } from 'react'\r\nimport Header from '../header/Header'\r\nimport Footer from '../footer/FooterContainer'\r\n\r\nconst Layout = (props: any) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t\t<Footer />\r\n\t\t</Fragment >\r\n\t)\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { defaultAction } from '../../actions/default.action'\r\nimport \"./Home.scss\"\r\n\r\nconst Home = () => {\r\n\tconst dispatch = useDispatch()\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<div>\r\n\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Dicta, dignissimos.\r\n\t\t\t</div>\r\n\t\t\t<button onClick={() => dispatch(defaultAction())}>Dispatch</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","import { DEFAULT } from \"./types\";\r\n\r\nexport const defaultAction = () => {\r\n\treturn {\r\n\t\ttype: DEFAULT,\r\n\t\tpayload: \"DEFAULT\",\r\n\t};\r\n};\r\n","export const DEFAULT = \"DEFAULT\";\r\n","import React from 'react'\r\n\r\nconst Test = (props: any) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tTesting\r\n\t\t\t{console.log(props.match)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Test\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Layout from './components/core/layout/Layout';\r\nimport Home from './components/home/Home';\r\nimport Test from './components/test/Test';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<Layout>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact={true} path=\"/home\" component={Home} />\r\n\t\t\t\t\t<Route path=\"/test\" component={Test} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Layout>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\ntype Config = {\r\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\");\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null &&\r\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then((registration) => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import { DEFAULT } from \"./../actions/types\";\r\nconst initialState = {\r\n\tdefault: null,\r\n};\r\nexport const defaultReducer = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase DEFAULT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdefault: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { defaultReducer } from \"./default.reducer\";\r\n\r\nexport default combineReducers({\r\n\tdefault: defaultReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk, logger];\r\n\r\nexport const getStore = () =>\r\n\tcreateStore(\r\n\t\treducers,\r\n\t\tinitialState,\r\n\t\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n\t);\r\n","// @ts-nocheck\r\nimport { theme } from \"@chakra-ui/core\";\r\n\r\nconst breakpoints = [\"360px\", \"768px\", \"1024px\", \"1440px\"];\r\nbreakpoints.sm = breakpoints[0];\r\nbreakpoints.md = breakpoints[1];\r\nbreakpoints.lg = breakpoints[2];\r\nbreakpoints.xl = breakpoints[3];\r\nexport const newTheme = {\r\n  ...theme,\r\n  breakpoints,\r\n};\r\n","import { CSSReset, ThemeProvider } from \"@chakra-ui/core\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { getStore } from \"./store\";\r\nimport { newTheme } from \"./themes/breakpoints\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={getStore()}>\r\n      <ThemeProvider theme={newTheme}>\r\n        <CSSReset />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}